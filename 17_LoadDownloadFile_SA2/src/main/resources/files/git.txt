git config --global user.name "John Doe"
git config --global user.email johndoe@example.com
git config --global core.editor 
git config --global init.defaultBranch main
git config --list
git config user.name

$ git help <verb>
$ git <verb> --help
$ man git-<verb>

git comand -h ==> help
git mv
git rm

 .gitignore


1. git cheackout master
2. git pull origin master
3. git branch nuevaBranch
4. git checkout nuevaBranch
5. Modificas
6. git add -A
7. git commit -m "lol"
8. git push origin master 	==> subes act. de la branch
9. git merge nuevaBranch 	==> mergeas en local
10. git push 			==> subes el mergeo

=============================
git init
echo 'My Project' > README
git status
git add .
git restore
========================================
git remote -v ==> shows the urls stored
git remote add nombre url ==> le pones un mote para callearlo
git remote show origin ==> mas info
git remote renam nombre nombre
========================================
git status
git status -s
git add -A
git add .
git commit -m 'Initial project version'

============
git branch nuevaBranch
git checkout nuevaBranch
git branch
git push -u origin nuevaBranch
git branch -a
git branch --merged ==> nos muestra las branchs mergeadas
git merge nuevaBranch ==> lo mete en el brach mastar
git push
git push origin --delte nuevaBranch ==> eliminar branch online
git branch -d nuevaBranch ==> elimina branch local
============
********
git clone http://fijhifoafeefee
git pull

git diff
git log


git commmit -m "frase"
git push
********
=================================
# ignore all .a files
*.a
# but do track lib.a, even though you're ignoring .a files above
!lib.a
# only ignore the TODO file in the current directory, not subdir/TODO
/TODO
# ignore all files in any directory named build
build/
# ignore doc/notes.txt, but not doc/server/arch.txt
doc/*.txt
# ignore all .pdf files in the doc/ directory and any of its subdirectories
doc/**/*.pdf
